<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <!--<configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>-->
  <!-- Level的级别，由高到低 -->
  <!-- OFF > Fatal > ERROR > WARN > DEBUG > INFO > ALL-->
  <!-- 解释：如果level是ERROR，则在cs文件里面调用log4net的info()方法，则不会写入到日志文件中-->
  <log4net>
    <!--根记录器，所有Logger都默认继承它
    如果没有定义根记录器，调用GetLogger没有找到定义的Logger时不会在日志文件写入日志
    -->
    <root>
      <level value="ALL" />
      <!--错误日志附着器引用
      由于所有记录器都默认继承root，所以此附着器引用对所有的记录器都生效，因此如下配置的情况，调用错误日志记录器时会记录2次错误日志
      -->
      <appender-ref ref="ErrorAppender" />
      <!--<appender-ref ref="ADONetAppender" />-->
    </root>
    <!--错误日志记录器-->
    <logger name="logerror">
      <level value="ALL" />
      <!--定义记录的日志级别-->
      <appender-ref ref="ErrorAppender" />
      <!--附着器引用-->
    </logger>
    <!--信息日志记录器-->
    <logger name="loginfo">
      <level value="ALL" />
      <appender-ref ref="InfoAppender" />
      <appender-ref ref="ADONetAppender" />
    </logger>
    <!--错误日志附着器-->
    <appender name="ErrorAppender" type="log4net.Appender.RollingFileAppender">
      <!-- name属性指定其名称,type则是log4net.Appender命名空间的一个类的名称,意思是,指定使用哪种介质-->
      <param name="File" value="Log\\LogError\\" />
      <!--日志输出到exe程序这个相对目录下-->
      <param name="AppendToFile" value="true" />
      <!--输出的日志不会覆盖以前的信息-->
      <param name="MaxSizeRollBackups" value="100" />
      <!--备份文件的个数-->
      <param name="MaxFileSize" value="10240" />
      <!--当个日志文件的最大大小-->
      <param name="StaticLogFileName" value="false" />
      <!--是否使用静态文件名-->
      <param name="DatePattern" value="yyyyMMdd&quot;.txt&quot;" />
      <!--日志文件名-->
      <param name="RollingStyle" value="Date" />
      <!--文件创建的方式，这里是以Date方式创建-->
      <!--错误日志布局-->
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%d [%t] %-5p %c %n%m%n" />
      </layout>
    </appender>
    <!--信息日志附着器-->
    <appender name="InfoAppender" type="log4net.Appender.RollingFileAppender">
      <!--文件路径-->
      <param name="File" value="Log\\LogInfo\\" />
      <!--所有新的日志都进行追加-->
      <param name="AppendToFile" value="true" />
      <param name="MaxFileSize" value="10240" />
      <param name="MaxSizeRollBackups" value="100" />
      <!--文件名称不固定，可变-->
      <param name="StaticLogFileName" value="false" />
      <!--文件名称格式-->
      <param name="DatePattern" value="yyyyMMdd&quot;.txt&quot;" />
      <!--文件名按日期滚动-->
      <param name="RollingStyle" value="Date" />
      <!--信息日志布局-->
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%d [%t] %-5p %c %n%m%n" />
      </layout>
    </appender>
    <!--数据库日志附着器-->
    <appender name="ADONetAppender" type="log4net.Appender.ADONetAppender,log4net">
      <!--BufferSize为缓冲区大小，只有日志记录超设定值才会一块写入到数据库-->
      <bufferSize value="1" />
      <!--或写为<param name="BufferSize" value="1" />-->
      <!--引用-->
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <!--连接数据库字符串-->
      <connectionString value="data source=.;database=Test2;user id=sa;password=123456;Enlist=true;Pooling=true;Max Pool Size = 512;" />
      <!--插入到表Log-->
      <commandText value="INSERT INTO Log ([Date],[Thread],[Level],[Logger],[Message],[Location],[Exception]) VALUES (@log_date,@thread, @log_level, @logger,@message,@location,@exception)" />
      <!--日志记录时间，RawTimeStampLayout为默认的时间输出格式 -->
      <parameter>
        <parameterName value="@log_date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout" />
      </parameter>
      <parameter>
        <parameterName value="@thread" />
        <dbType value="String" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@Logger" />
        <dbType value="String" />
        <size value="100" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_level" />
        <dbType value="String" />
        <size value="100" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@message" />
        <dbType value="String" />
        <size value="100" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@location" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%location" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@exception" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%exception" />
        </layout>
      </parameter>
    </appender>
  </log4net>
  
  <!--log4net调式相关配置 需要放到web.config中才会生效  start-->
  <appSettings>
    <!--开启log4net调式-->
    <add key="log4net.Internal.Debug" value="true"/>
  </appSettings>
  <!--log4net调式监听-->
  <system.diagnostics>
    <trace autoflush="true">
      <listeners>
        <add name="textWriterTraceListener" type="System.Diagnostics.TextWriterTraceListener" initializeData="Log\\log4net.txt" />
      </listeners>
    </trace>
  </system.diagnostics>
  <!--log4net调式相关配置 需要放到web.config中  end-->
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
  </system.web>

</configuration>
